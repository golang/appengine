// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: xmpp_service.proto

package xmpp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type XmppServiceError_ErrorCode int32

const (
	XmppServiceError_NONE                 XmppServiceError_ErrorCode = 0
	XmppServiceError_UNSPECIFIED_ERROR    XmppServiceError_ErrorCode = 1
	XmppServiceError_INVALID_JID          XmppServiceError_ErrorCode = 2
	XmppServiceError_NO_BODY              XmppServiceError_ErrorCode = 3
	XmppServiceError_INVALID_XML          XmppServiceError_ErrorCode = 4
	XmppServiceError_INVALID_TYPE         XmppServiceError_ErrorCode = 5
	XmppServiceError_INVALID_SHOW         XmppServiceError_ErrorCode = 6
	XmppServiceError_EXCEEDED_MAX_SIZE    XmppServiceError_ErrorCode = 7
	XmppServiceError_APPID_ALIAS_REQUIRED XmppServiceError_ErrorCode = 8
	XmppServiceError_NONDEFAULT_MODULE    XmppServiceError_ErrorCode = 9
)

// Enum value maps for XmppServiceError_ErrorCode.
var (
	XmppServiceError_ErrorCode_name = map[int32]string{
		0: "NONE",
		1: "UNSPECIFIED_ERROR",
		2: "INVALID_JID",
		3: "NO_BODY",
		4: "INVALID_XML",
		5: "INVALID_TYPE",
		6: "INVALID_SHOW",
		7: "EXCEEDED_MAX_SIZE",
		8: "APPID_ALIAS_REQUIRED",
		9: "NONDEFAULT_MODULE",
	}
	XmppServiceError_ErrorCode_value = map[string]int32{
		"NONE":                 0,
		"UNSPECIFIED_ERROR":    1,
		"INVALID_JID":          2,
		"NO_BODY":              3,
		"INVALID_XML":          4,
		"INVALID_TYPE":         5,
		"INVALID_SHOW":         6,
		"EXCEEDED_MAX_SIZE":    7,
		"APPID_ALIAS_REQUIRED": 8,
		"NONDEFAULT_MODULE":    9,
	}
)

func (x XmppServiceError_ErrorCode) Enum() *XmppServiceError_ErrorCode {
	p := new(XmppServiceError_ErrorCode)
	*p = x
	return p
}

func (x XmppServiceError_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XmppServiceError_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_xmpp_service_proto_enumTypes[0].Descriptor()
}

func (XmppServiceError_ErrorCode) Type() protoreflect.EnumType {
	return &file_xmpp_service_proto_enumTypes[0]
}

func (x XmppServiceError_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XmppServiceError_ErrorCode.Descriptor instead.
func (XmppServiceError_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{0, 0}
}

type PresenceResponse_SHOW int32

const (
	PresenceResponse_NORMAL         PresenceResponse_SHOW = 0
	PresenceResponse_AWAY           PresenceResponse_SHOW = 1
	PresenceResponse_DO_NOT_DISTURB PresenceResponse_SHOW = 2
	PresenceResponse_CHAT           PresenceResponse_SHOW = 3
	PresenceResponse_EXTENDED_AWAY  PresenceResponse_SHOW = 4
)

// Enum value maps for PresenceResponse_SHOW.
var (
	PresenceResponse_SHOW_name = map[int32]string{
		0: "NORMAL",
		1: "AWAY",
		2: "DO_NOT_DISTURB",
		3: "CHAT",
		4: "EXTENDED_AWAY",
	}
	PresenceResponse_SHOW_value = map[string]int32{
		"NORMAL":         0,
		"AWAY":           1,
		"DO_NOT_DISTURB": 2,
		"CHAT":           3,
		"EXTENDED_AWAY":  4,
	}
)

func (x PresenceResponse_SHOW) Enum() *PresenceResponse_SHOW {
	p := new(PresenceResponse_SHOW)
	*p = x
	return p
}

func (x PresenceResponse_SHOW) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresenceResponse_SHOW) Descriptor() protoreflect.EnumDescriptor {
	return file_xmpp_service_proto_enumTypes[1].Descriptor()
}

func (PresenceResponse_SHOW) Type() protoreflect.EnumType {
	return &file_xmpp_service_proto_enumTypes[1]
}

func (x PresenceResponse_SHOW) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresenceResponse_SHOW.Descriptor instead.
func (PresenceResponse_SHOW) EnumDescriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{2, 0}
}

type XmppMessageResponse_XmppMessageStatus int32

const (
	XmppMessageResponse_NO_ERROR    XmppMessageResponse_XmppMessageStatus = 0
	XmppMessageResponse_INVALID_JID XmppMessageResponse_XmppMessageStatus = 1
	XmppMessageResponse_OTHER_ERROR XmppMessageResponse_XmppMessageStatus = 2
)

// Enum value maps for XmppMessageResponse_XmppMessageStatus.
var (
	XmppMessageResponse_XmppMessageStatus_name = map[int32]string{
		0: "NO_ERROR",
		1: "INVALID_JID",
		2: "OTHER_ERROR",
	}
	XmppMessageResponse_XmppMessageStatus_value = map[string]int32{
		"NO_ERROR":    0,
		"INVALID_JID": 1,
		"OTHER_ERROR": 2,
	}
)

func (x XmppMessageResponse_XmppMessageStatus) Enum() *XmppMessageResponse_XmppMessageStatus {
	p := new(XmppMessageResponse_XmppMessageStatus)
	*p = x
	return p
}

func (x XmppMessageResponse_XmppMessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XmppMessageResponse_XmppMessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_xmpp_service_proto_enumTypes[2].Descriptor()
}

func (XmppMessageResponse_XmppMessageStatus) Type() protoreflect.EnumType {
	return &file_xmpp_service_proto_enumTypes[2]
}

func (x XmppMessageResponse_XmppMessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XmppMessageResponse_XmppMessageStatus.Descriptor instead.
func (XmppMessageResponse_XmppMessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{6, 0}
}

type XmppServiceError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XmppServiceError) Reset() {
	*x = XmppServiceError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppServiceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppServiceError) ProtoMessage() {}

func (x *XmppServiceError) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppServiceError.ProtoReflect.Descriptor instead.
func (*XmppServiceError) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{0}
}

type PresenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid     string  `protobuf:"bytes,1,opt,name=jid,proto3" json:"jid,omitempty"`
	FromJid *string `protobuf:"bytes,2,opt,name=from_jid,json=fromJid,proto3,oneof" json:"from_jid,omitempty"`
}

func (x *PresenceRequest) Reset() {
	*x = PresenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceRequest) ProtoMessage() {}

func (x *PresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceRequest.ProtoReflect.Descriptor instead.
func (*PresenceRequest) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{1}
}

func (x *PresenceRequest) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *PresenceRequest) GetFromJid() string {
	if x != nil && x.FromJid != nil {
		return *x.FromJid
	}
	return ""
}

type PresenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAvailable bool                   `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Presence    *PresenceResponse_SHOW `protobuf:"varint,2,opt,name=presence,proto3,enum=appengine.PresenceResponse_SHOW,oneof" json:"presence,omitempty"`
	Valid       *bool                  `protobuf:"varint,3,opt,name=valid,proto3,oneof" json:"valid,omitempty"`
}

func (x *PresenceResponse) Reset() {
	*x = PresenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceResponse) ProtoMessage() {}

func (x *PresenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceResponse.ProtoReflect.Descriptor instead.
func (*PresenceResponse) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{2}
}

func (x *PresenceResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *PresenceResponse) GetPresence() PresenceResponse_SHOW {
	if x != nil && x.Presence != nil {
		return *x.Presence
	}
	return PresenceResponse_NORMAL
}

func (x *PresenceResponse) GetValid() bool {
	if x != nil && x.Valid != nil {
		return *x.Valid
	}
	return false
}

type BulkPresenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid     []string `protobuf:"bytes,1,rep,name=jid,proto3" json:"jid,omitempty"`
	FromJid *string  `protobuf:"bytes,2,opt,name=from_jid,json=fromJid,proto3,oneof" json:"from_jid,omitempty"`
}

func (x *BulkPresenceRequest) Reset() {
	*x = BulkPresenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkPresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkPresenceRequest) ProtoMessage() {}

func (x *BulkPresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkPresenceRequest.ProtoReflect.Descriptor instead.
func (*BulkPresenceRequest) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{3}
}

func (x *BulkPresenceRequest) GetJid() []string {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *BulkPresenceRequest) GetFromJid() string {
	if x != nil && x.FromJid != nil {
		return *x.FromJid
	}
	return ""
}

type BulkPresenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresenceResponse []*PresenceResponse `protobuf:"bytes,1,rep,name=presence_response,json=presenceResponse,proto3" json:"presence_response,omitempty"`
}

func (x *BulkPresenceResponse) Reset() {
	*x = BulkPresenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkPresenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkPresenceResponse) ProtoMessage() {}

func (x *BulkPresenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkPresenceResponse.ProtoReflect.Descriptor instead.
func (*BulkPresenceResponse) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{4}
}

func (x *BulkPresenceResponse) GetPresenceResponse() []*PresenceResponse {
	if x != nil {
		return x.PresenceResponse
	}
	return nil
}

type XmppMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid     []string `protobuf:"bytes,1,rep,name=jid,proto3" json:"jid,omitempty"`
	Body    string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	RawXml  *bool    `protobuf:"varint,3,opt,name=raw_xml,json=rawXml,proto3,oneof" json:"raw_xml,omitempty"`
	Type    *string  `protobuf:"bytes,4,opt,name=type,proto3,oneof" json:"type,omitempty"`
	FromJid *string  `protobuf:"bytes,5,opt,name=from_jid,json=fromJid,proto3,oneof" json:"from_jid,omitempty"`
}

func (x *XmppMessageRequest) Reset() {
	*x = XmppMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppMessageRequest) ProtoMessage() {}

func (x *XmppMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppMessageRequest.ProtoReflect.Descriptor instead.
func (*XmppMessageRequest) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{5}
}

func (x *XmppMessageRequest) GetJid() []string {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *XmppMessageRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *XmppMessageRequest) GetRawXml() bool {
	if x != nil && x.RawXml != nil {
		return *x.RawXml
	}
	return false
}

func (x *XmppMessageRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *XmppMessageRequest) GetFromJid() string {
	if x != nil && x.FromJid != nil {
		return *x.FromJid
	}
	return ""
}

type XmppMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []XmppMessageResponse_XmppMessageStatus `protobuf:"varint,1,rep,packed,name=status,proto3,enum=appengine.XmppMessageResponse_XmppMessageStatus" json:"status,omitempty"`
}

func (x *XmppMessageResponse) Reset() {
	*x = XmppMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppMessageResponse) ProtoMessage() {}

func (x *XmppMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppMessageResponse.ProtoReflect.Descriptor instead.
func (*XmppMessageResponse) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{6}
}

func (x *XmppMessageResponse) GetStatus() []XmppMessageResponse_XmppMessageStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type XmppSendPresenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid     string  `protobuf:"bytes,1,opt,name=jid,proto3" json:"jid,omitempty"`
	Type    *string `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Show    *string `protobuf:"bytes,3,opt,name=show,proto3,oneof" json:"show,omitempty"`
	Status  *string `protobuf:"bytes,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	FromJid *string `protobuf:"bytes,5,opt,name=from_jid,json=fromJid,proto3,oneof" json:"from_jid,omitempty"`
}

func (x *XmppSendPresenceRequest) Reset() {
	*x = XmppSendPresenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppSendPresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppSendPresenceRequest) ProtoMessage() {}

func (x *XmppSendPresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppSendPresenceRequest.ProtoReflect.Descriptor instead.
func (*XmppSendPresenceRequest) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{7}
}

func (x *XmppSendPresenceRequest) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *XmppSendPresenceRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *XmppSendPresenceRequest) GetShow() string {
	if x != nil && x.Show != nil {
		return *x.Show
	}
	return ""
}

func (x *XmppSendPresenceRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *XmppSendPresenceRequest) GetFromJid() string {
	if x != nil && x.FromJid != nil {
		return *x.FromJid
	}
	return ""
}

type XmppSendPresenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XmppSendPresenceResponse) Reset() {
	*x = XmppSendPresenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppSendPresenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppSendPresenceResponse) ProtoMessage() {}

func (x *XmppSendPresenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppSendPresenceResponse.ProtoReflect.Descriptor instead.
func (*XmppSendPresenceResponse) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{8}
}

type XmppInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid     string  `protobuf:"bytes,1,opt,name=jid,proto3" json:"jid,omitempty"`
	FromJid *string `protobuf:"bytes,2,opt,name=from_jid,json=fromJid,proto3,oneof" json:"from_jid,omitempty"`
}

func (x *XmppInviteRequest) Reset() {
	*x = XmppInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppInviteRequest) ProtoMessage() {}

func (x *XmppInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppInviteRequest.ProtoReflect.Descriptor instead.
func (*XmppInviteRequest) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{9}
}

func (x *XmppInviteRequest) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *XmppInviteRequest) GetFromJid() string {
	if x != nil && x.FromJid != nil {
		return *x.FromJid
	}
	return ""
}

type XmppInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XmppInviteResponse) Reset() {
	*x = XmppInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmpp_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XmppInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmppInviteResponse) ProtoMessage() {}

func (x *XmppInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmpp_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmppInviteResponse.ProtoReflect.Descriptor instead.
func (*XmppInviteResponse) Descriptor() ([]byte, []int) {
	return file_xmpp_service_proto_rawDescGZIP(), []int{10}
}

var File_xmpp_service_proto protoreflect.FileDescriptor

var file_xmpp_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x78, 0x6d, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x22,
	0xdc, 0x01, 0x0a, 0x10, 0x58, 0x6d, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xc7, 0x01, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4a,
	0x49, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x58, 0x4d, 0x4c,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x53, 0x48, 0x4f, 0x57, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x07, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x50, 0x50, 0x49, 0x44, 0x5f, 0x41, 0x4c, 0x49, 0x41, 0x53, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x4e, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x09, 0x22, 0x50,
	0x0a, 0x0f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4a, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64,
	0x22, 0xf9, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x48, 0x4f, 0x57, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x88, 0x01, 0x01, 0x22, 0x4d, 0x0a, 0x04, 0x53, 0x48, 0x4f, 0x57, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x57,
	0x41, 0x59, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x44,
	0x49, 0x53, 0x54, 0x55, 0x52, 0x42, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x54,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x41,
	0x57, 0x41, 0x59, 0x10, 0x04, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x13,
	0x42, 0x75, 0x6c, 0x6b, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4a,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a,
	0x69, 0x64, 0x22, 0x60, 0x0a, 0x14, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x58, 0x6d, 0x70, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x78, 0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x72, 0x61, 0x77, 0x58, 0x6d, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x6a, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x4a, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x77,
	0x5f, 0x78, 0x6d, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x13, 0x58,
	0x6d, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x58,
	0x6d, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x58, 0x6d, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x43, 0x0a, 0x11,
	0x58, 0x6d, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4a, 0x49, 0x44, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x22, 0xc4, 0x01, 0x0a, 0x17, 0x58, 0x6d, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4a, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x58, 0x6d, 0x70, 0x70,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x11, 0x58, 0x6d, 0x70, 0x70, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4a, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6a, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x58, 0x6d, 0x70, 0x70,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b,
	0x5a, 0x29, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x78, 0x6d, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_xmpp_service_proto_rawDescOnce sync.Once
	file_xmpp_service_proto_rawDescData = file_xmpp_service_proto_rawDesc
)

func file_xmpp_service_proto_rawDescGZIP() []byte {
	file_xmpp_service_proto_rawDescOnce.Do(func() {
		file_xmpp_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_xmpp_service_proto_rawDescData)
	})
	return file_xmpp_service_proto_rawDescData
}

var file_xmpp_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_xmpp_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_xmpp_service_proto_goTypes = []interface{}{
	(XmppServiceError_ErrorCode)(0),            // 0: appengine.XmppServiceError.ErrorCode
	(PresenceResponse_SHOW)(0),                 // 1: appengine.PresenceResponse.SHOW
	(XmppMessageResponse_XmppMessageStatus)(0), // 2: appengine.XmppMessageResponse.XmppMessageStatus
	(*XmppServiceError)(nil),                   // 3: appengine.XmppServiceError
	(*PresenceRequest)(nil),                    // 4: appengine.PresenceRequest
	(*PresenceResponse)(nil),                   // 5: appengine.PresenceResponse
	(*BulkPresenceRequest)(nil),                // 6: appengine.BulkPresenceRequest
	(*BulkPresenceResponse)(nil),               // 7: appengine.BulkPresenceResponse
	(*XmppMessageRequest)(nil),                 // 8: appengine.XmppMessageRequest
	(*XmppMessageResponse)(nil),                // 9: appengine.XmppMessageResponse
	(*XmppSendPresenceRequest)(nil),            // 10: appengine.XmppSendPresenceRequest
	(*XmppSendPresenceResponse)(nil),           // 11: appengine.XmppSendPresenceResponse
	(*XmppInviteRequest)(nil),                  // 12: appengine.XmppInviteRequest
	(*XmppInviteResponse)(nil),                 // 13: appengine.XmppInviteResponse
}
var file_xmpp_service_proto_depIdxs = []int32{
	1, // 0: appengine.PresenceResponse.presence:type_name -> appengine.PresenceResponse.SHOW
	5, // 1: appengine.BulkPresenceResponse.presence_response:type_name -> appengine.PresenceResponse
	2, // 2: appengine.XmppMessageResponse.status:type_name -> appengine.XmppMessageResponse.XmppMessageStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_xmpp_service_proto_init() }
func file_xmpp_service_proto_init() {
	if File_xmpp_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xmpp_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppServiceError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkPresenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkPresenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppSendPresenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppSendPresenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmpp_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XmppInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_xmpp_service_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_xmpp_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_xmpp_service_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_xmpp_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_xmpp_service_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_xmpp_service_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xmpp_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xmpp_service_proto_goTypes,
		DependencyIndexes: file_xmpp_service_proto_depIdxs,
		EnumInfos:         file_xmpp_service_proto_enumTypes,
		MessageInfos:      file_xmpp_service_proto_msgTypes,
	}.Build()
	File_xmpp_service_proto = out.File
	file_xmpp_service_proto_rawDesc = nil
	file_xmpp_service_proto_goTypes = nil
	file_xmpp_service_proto_depIdxs = nil
}
